{"version":3,"sources":["soccer-field.svg","jersey.svg","store.js","components/Players.js","components/Titulars.js","components/Substitutes.js","components/Squad.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","players","id","name","photo","titulars","substitutes","createStore","state","action","type","concat","player","filter","p","connect","dispatch","addTitular","addSubstitute","className","map","key","src","alt","onClick","removeTitular","t","jersey","field","removeSubstitute","Squad","App","store","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b3d19d05.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/soccer-field.f8e6342c.svg\";","module.exports = __webpack_public_path__ + \"static/media/jersey.b1b40c25.svg\";","import { createStore } from \"redux\";\n\nconst initialState = {\n  players: [\n    {\n      id: 1,\n      name: \"Erling Haaland\",\n      photo:  \"https://api.statorium.com/media/bearleague/bl15544573321057.png\",\n    },\n    {\n      id: 2,\n      name: \"Lionel Messi\",\n      photo: \"https://www.placecage.com/80/80\",\n    },\n    {\n      id: 3,\n      name: \"Thomas MÃ¼ller\",\n      photo:\"https://www.placecage.com/80/80\"\n    },\n    {\n      id: 4,\n      name: \"Edison Cavanni\",\n      photo:\"https://www.placecage.com/80/80\"\n    },    \n    {\n      id: 5,\n      name: \"Marco Verrati\",\n      photo:\"https://www.placecage.com/80/80\"\n    },\n    {\n      id: 6,\n      name: \"D. Calvert-Lewin\",\n      photo:\"https://www.statorium.com/media/bearleague/bl1581673516471.png\"\n    },\n    {\n      id: 7,\n      name: \"Alexandre Lacazette\",\n      photo:\"https://www.statorium.com/media/bearleague/bl15816735322887.png\"\n    },\n    {\n      id: 8,\n      name: \"Mohamed Salah\",\n      photo:\"https://www.statorium.com/media/bearleague/bl1581673500905.png\"\n    },\n    {\n      id: 9,\n      name: \"Marco Verrati\",\n      photo:\"https://www.placecage.com/80/80\"\n    },\n    {\n      id: 10,\n      name: \"Marco Verrati\",\n      photo:\"https://www.placecage.com/80/80\"\n    },\n    {\n      id: 11,\n      name: \"Marco Verrati\",\n      photo:\"https://www.placecage.com/80/80\"\n    },\n  ],\n  titulars: [],\n  substitutes: [],\n};\n\nconst reducerCoach = (state = initialState, action) => {\n\n  if(action.type === 'ADD_TITULAR'){\n    return {\n      ...state,\n      titulars: state.titulars.concat(action.player),\n      players: state.players.filter(p =>p.id !==action.player.id)\n    }\n  }\n\n  if(action.type ==='ADD_SUBSTITUTE'){\n    return {\n      ...state,\n      substitutes: state.substitutes.concat(action.player),\n      players: state.players.filter(p => p.id !== action.player.id)\n    }\n  }\n\n  if(action.type ==='REMOVE_TITULAR'){\n    return {\n      ...state,\n      titulars: state.titulars.filter(p=> p.id !== action.player.id),\n      players: state.players.concat(action.player) \n    }\n  }\n\n  if(action.type ==='REMOVE_SUBSTITUTE'){\n    return {\n      ...state,\n      substitutes: state.substitutes.filter(p=> p.id !== action.player.id),\n      players: state.players.concat(action.player) \n    }\n  }\n\n  return state;\n};\n\nexport default createStore(reducerCoach);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst Players = ({ players, addTitular, addSubstitute }) => (\n  <section>\n    <h2 className=\"subtitle is-2 has-text-centered\">Select Players</h2>\n    <div className=\"players-container carousel\" id=\"carousel\">\n      {players.map((p) => (\n        <article className=\"player\" key={p.id}>\n          <img src={p.photo} alt={p.name} />\n          <h3>{p.name}</h3>\n          <div>\n            <button onClick={()=> addTitular(p)}> Titular</button>\n            <button onClick={()=> addSubstitute(p)}>Substitute</button>\n          </div>\n        </article>\n      ))}\n    </div>\n  </section>\n);\n\n\n\nconst mapStateToProps = state => ({\n  players: state.players,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addTitular(player) {\n    dispatch({\n      type:\"ADD_TITULAR\",\n      player\n    })\n  },\n  addSubstitute(player) {\n    dispatch({\n      type:\"ADD_SUBSTITUTE\",\n      player\n    })\n  }\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Players);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport field from \"../soccer-field.svg\";\nimport jersey from \"../jersey.svg\";\n\n\nconst Titulars = ({ titulars, removeTitular }) => (\n  <section>\n    <h2 className=\"subtitle is-3 has-text-centered\">Titulars</h2>\n    <div className=\"field\">\n      {titulars.map((t) => (\n        <article className=\"titular\" key={t.id}>\n          <div>\n            <img src={jersey} alt={t.name} />\n\n            <button onClick={() => removeTitular(t)}>X</button>\n          </div>\n          <p>{t.name}</p>\n        </article>\n      ))}\n      <img src={field} alt=\"soccer field\" />\n    </div>\n  </section>\n);\n\nconst mapStateToProps = (state) => ({\n  titulars: state.titulars,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  removeTitular(player) {\n    dispatch({\n      type: \"REMOVE_TITULAR\",\n      player,\n    });\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Titulars);\n","import React from 'react';\n\nimport { connect } from \"react-redux\";\n\nconst Substitutes = ({substitutes, removeSubstitute}) => (\n    <section>\n        <h2 className=\"subtitle is-3 has-text-centered\">Substitutes Bench</h2>\n        <div className=\"substitutes carousel\">\n            {substitutes.map(t => (\n                    <article className=\"substitute\" key={t.id}>\n                            <img src={t.photo} alt={t.name} />\n                            <h3 className=\"has-text-centered\">{t.name}</h3>\n                            <button onClick={()=>removeSubstitute(t)}>Remove</button>\n                    </article>\n                ))\n            }\n        </div>\n    </section>\n)\n\nconst mapStateToProps = (state) => ({\n    substitutes: state.substitutes,\n  });\n  \n  \nconst mapDispatchToProps = (dispatch) => ({\n    removeSubstitute(player){\n        dispatch({\n            type: 'REMOVE_SUBSTITUTE',\n            player\n        })\n    }\n});\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(Substitutes)","import React from \"react\";\nimport Titulars from './Titulars';\nimport Substitutes from './Substitutes';\n\nconst Squad = () =>(\n    <section>\n        <Titulars />\n        <Substitutes />\n    </section>\n)\n\nexport default Squad;","import React from 'react';\nimport { Provider } from \"react-redux\";\nimport store from './store';\nimport './App.scss';\nimport './App.sass';\n\n\n\nimport Players from './components/Players';\nimport Squad from './components/Squad';\n\n\n\nconst App = () => (\n  <Provider store={store}>\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1 className=\"title is-1\">Squad Manager</h1>\n      </header>\n      <Players />\n      <Squad />\n    </div>\n  </Provider>\n)\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}